{"version":3,"sources":["components/Card.js","components/CardList.js","components/Searchbox.js","components/ErrorBoundry.js","components/Scroll.js","container/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","username","className","src","alt","CardList","robots","map","user","i","Searchbox","searchfield","searchChange","type","placeholder","onChange","ErrorBoundry","props","state","hasError","error","info","this","setState","children","Component","Scroll","style","overflowY","height","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobot","filter","robot","toLowerCase","includes","length","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAceA,EAZF,SAAC,GAAiC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,SAC1B,OACC,sBAAKC,UAAU,mDAAf,UACL,qBAAKC,IAAG,+BAA0BF,EAA1B,YAA8CG,IAAI,SAC1D,sBAAKF,UAAU,gBAAf,UACI,6BAAKH,IACL,4BAAKC,W,4BCWMK,EAdG,SAAC,GAAa,IAAZC,EAAW,EAAXA,OAIhB,OACI,8BACCA,EAAOC,KAAI,SAACC,EAAMC,GACnB,OAAO,cAAC,EAAD,CAAcR,SAAUK,EAAOG,GAAGR,SAAUF,KAAMO,EAAOG,GAAGV,KAAMC,MAAOM,EAAOG,GAAGT,OAAxES,SCAXC,EAVG,SAAC,GAAiC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC9B,OACI,uBAAOC,KAAK,SACZX,UAAU,mCACVY,YAAY,eACZC,SAAWH,KCeJI,E,kDAnBf,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,UAAU,GAHA,E,qDAOlB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAW,M,oBAG7B,WACI,OAAGG,KAAKJ,MAAMC,SACJ,uDAEAG,KAAKL,MAAMO,a,GAhBEC,aCQZC,EARA,SAACT,GACZ,OACI,qBAAKU,MAAO,CAACC,UAAW,SAAUC,OAAO,SAAzC,SACKZ,EAAMO,YC+CJM,G,wDA1CX,aAAc,IAAD,8BACT,gBAcJC,eAAe,SAACC,GACZ,EAAKT,SAAS,CAACZ,YAAaqB,EAAMC,OAAOC,SAdzC,EAAKhB,MAAQ,CACRZ,OAAS,GACVK,YAAc,IAJT,E,qDAQb,WAAoB,IAAD,OACfwB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKhB,SAAS,CAACjB,OAASiC,S,oBAQ3C,WACI,MAA8BjB,KAAKJ,MAA5BZ,EAAP,EAAOA,OAAQK,EAAf,EAAeA,YACT6B,EAAgBlC,EAAOmC,QAAO,SAAAC,GAChC,OAAOA,EAAM3C,KAAK4C,cAAcC,SAASjC,EAAYgC,kBAE1D,OAASrC,EAAOuC,OACZ,mCACC,sBAAK3C,UAAU,KAAf,UACA,oBAAIA,UAAU,QAAd,yBACA,cAAC,EAAD,CAAWU,aAAcU,KAAKS,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACR,cAAE,EAAF,CAAWzB,OAAQkC,aAPK,6C,GAzBdM,IAAMrB,YCGTsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCIdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c190a86a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = ( { name, email, username } ) => {\r\n    return(\r\n     <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n<img src={`https://robohash.org/${username}?100x100`} alt=\"robo\" />\r\n<div className='tc f7 1h-copy'>\r\n    <h2>{name}</h2>\r\n    <p >{email}</p>\r\n</div>\r\n     </div>\r\n    );\r\n}\r\n\r\nexport default Card","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport {robots} from '../robots';\r\n\r\n\r\nconst CardList  = ({robots}) =>{\r\n    if (false){\r\n        throw new Error('noooooooooooo');\r\n    }else{\r\n    return (\r\n        <div>\r\n        {robots.map((user, i) => { \r\n        return <Card key={i} username={robots[i].username} name={robots[i].name} email={robots[i].email} />\r\n    })} \r\n    </div>\r\n    );\r\n}\r\n}\r\n\r\nexport default CardList\r\n","import React from \"react\";\r\n\r\nconst Searchbox = ({ searchfield, searchChange }) =>{\r\n    return(\r\n        <input type=\"search\" \r\n        className='pa3 ba b--green bg-lightest-blue' \r\n        placeholder='Search Robot'\r\n        onChange ={searchChange}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Searchbox","import React, {Component} from \"react\";\r\n\r\nclass ErrorBoundry extends Component{\r\nconstructor(props){\r\n    super(props);\r\n    this.state = {\r\n        hasError: false\r\n    }\r\n}\r\n\r\ncomponentDidCatch(error, info){\r\n  this.setState({ hasError : true})\r\n}\r\n\r\nrender(){\r\n    if(this.state.hasError){\r\n       return <h1>ooops That's not good</h1>\r\n    }\r\n      return  this.props.children \r\n\r\n}\r\n}\r\nexport default ErrorBoundry;","import React from \"react\";\r\n\r\nconst Scroll = (props) =>{\r\n    return (\r\n        <div style={{overflowY: 'scroll', height:'600px' }}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll","import React from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport Searchbox from \"../components/Searchbox\";\r\nimport ErrorBoundry from \"../components/ErrorBoundry\";\r\nimport Scroll from \"../components/Scroll\"\r\nimport './App.css';\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n             robots : [],\r\n            searchfield : '',\r\n   \r\n        };\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => this.setState({robots : users}));\r\n    \r\n    }\r\n\r\n    onSearchChange=(event)=>{\r\n        this.setState({searchfield: event.target.value});\r\n       \r\n    }\r\n    render(){\r\n        const {robots, searchfield} = this.state ;\r\n        const filteredRobot = robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        })\r\n       return  !robots.length ? <h1>loading</h1> :\r\n      (    <>\r\n            <div className='tc'>\r\n            <h1 className='title'>ROBOFRIENDS</h1>\r\n            <Searchbox searchChange={this.onSearchChange} />\r\n            <Scroll>\r\n                <ErrorBoundry>\r\n        < CardList robots={filteredRobot} />\r\n       </ErrorBoundry>\r\n        </Scroll>\r\n        </div>\r\n        </>\r\n        );\r\n       \r\n    };\r\n   \r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Card from './components/Card';\r\nimport App from './container/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\n\r\n                \r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App / >\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}